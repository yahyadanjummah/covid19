from __future__ import division, print_function
# coding=utf-8
import sys
import os
import glob
import re
import numpy as np

# Keras
from tensorflow.keras.applications.imagenet_utils import preprocess_input, decode_predictions
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image

# Flask utils
from flask import Flask, redirect, url_for, request, render_template
from werkzeug.utils import secure_filename
#from gevent.pywsgi import WSGIServer

# Define a flask app
app = Flask(__name__)

# Model saved with Keras model.save()
MODEL_PATH =os.path.dirname(__file__)+'/model_resnet50.h5'

# Load your trained model
model = load_model(MODEL_PATH)
# MODEL_PATH ='model_resnet50.h5'
# model = load_model(MODEL_PATH)

# Preprocessing the image
x = image.img_to_array(img)
   x = np.expand_dims(x, axis=0)
   x = preprocess_input(x)
   preds = model.predict(x)
   pred=np.ndarray.item(np.argmax(preds, axis=1))
   if pred==0:
        preds="The Person is Infected With covid19"
   else:
        preds="The Person is not Infected With covid19"
    
    
   return preds

base_path=os.path.dirname(__file__)+"/static"

@app.route('/', methods=['GET'])
def index():
    # Main page
    return render_template('detect covid19.html')

@app.route('/predict', methods=['GET', 'POST'])
def upload():
    if request.method == 'POST':
        # Get the file from post request
        f = request.files['file']

        # Save the file to ./uploads
        # basepath = os.path.dirname(__file__)
        file_path = os.path.join(
            base_path, secure_filename(f.filename))
        f.save(file_path)

        # Make prediction
        preds = model_predict(file_path, model)
        result=preds
        return result
    return None


if __name__ == '__main__':
    app.run(debug=True)
